// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: outputs/lidar.proto

package pb_outputs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LidarSensorOutput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Many (but not necessarily all) scans in a single rotation
	Scans         []*LidarSensorOutput_Scan `protobuf:"bytes,1,rep,name=scans,proto3" json:"scans,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LidarSensorOutput) Reset() {
	*x = LidarSensorOutput{}
	mi := &file_outputs_lidar_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LidarSensorOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LidarSensorOutput) ProtoMessage() {}

func (x *LidarSensorOutput) ProtoReflect() protoreflect.Message {
	mi := &file_outputs_lidar_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LidarSensorOutput.ProtoReflect.Descriptor instead.
func (*LidarSensorOutput) Descriptor() ([]byte, []int) {
	return file_outputs_lidar_proto_rawDescGZIP(), []int{0}
}

func (x *LidarSensorOutput) GetScans() []*LidarSensorOutput_Scan {
	if x != nil {
		return x.Scans
	}
	return nil
}

// A scan corresponds to a single shot of the laser. One rotation contains many scans.
type LidarSensorOutput_Scan struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// angle in degrees
	Angle float32 `protobuf:"fixed32,1,opt,name=angle,proto3" json:"angle,omitempty"`
	// distance in meters
	Distance float32 `protobuf:"fixed32,2,opt,name=distance,proto3" json:"distance,omitempty"`
	// quality of the scan (0 is worst, 255 is best)
	Quality uint32 `protobuf:"varint,3,opt,name=quality,proto3" json:"quality,omitempty"`
	// true if this is the start of a new scan rotation
	IsStart       bool `protobuf:"varint,4,opt,name=isStart,proto3" json:"isStart,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LidarSensorOutput_Scan) Reset() {
	*x = LidarSensorOutput_Scan{}
	mi := &file_outputs_lidar_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LidarSensorOutput_Scan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LidarSensorOutput_Scan) ProtoMessage() {}

func (x *LidarSensorOutput_Scan) ProtoReflect() protoreflect.Message {
	mi := &file_outputs_lidar_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LidarSensorOutput_Scan.ProtoReflect.Descriptor instead.
func (*LidarSensorOutput_Scan) Descriptor() ([]byte, []int) {
	return file_outputs_lidar_proto_rawDescGZIP(), []int{0, 0}
}

func (x *LidarSensorOutput_Scan) GetAngle() float32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

func (x *LidarSensorOutput_Scan) GetDistance() float32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *LidarSensorOutput_Scan) GetQuality() uint32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *LidarSensorOutput_Scan) GetIsStart() bool {
	if x != nil {
		return x.IsStart
	}
	return false
}

var File_outputs_lidar_proto protoreflect.FileDescriptor

const file_outputs_lidar_proto_rawDesc = "" +
	"\n" +
	"\x13outputs/lidar.proto\x12\rprotobuf_msgs\"\xbe\x01\n" +
	"\x11LidarSensorOutput\x12;\n" +
	"\x05scans\x18\x01 \x03(\v2%.protobuf_msgs.LidarSensorOutput.ScanR\x05scans\x1al\n" +
	"\x04Scan\x12\x14\n" +
	"\x05angle\x18\x01 \x01(\x02R\x05angle\x12\x1a\n" +
	"\bdistance\x18\x02 \x01(\x02R\bdistance\x12\x18\n" +
	"\aquality\x18\x03 \x01(\rR\aquality\x12\x18\n" +
	"\aisStart\x18\x04 \x01(\bR\aisStartB\x10Z\x0ease/pb_outputsb\x06proto3"

var (
	file_outputs_lidar_proto_rawDescOnce sync.Once
	file_outputs_lidar_proto_rawDescData []byte
)

func file_outputs_lidar_proto_rawDescGZIP() []byte {
	file_outputs_lidar_proto_rawDescOnce.Do(func() {
		file_outputs_lidar_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_outputs_lidar_proto_rawDesc), len(file_outputs_lidar_proto_rawDesc)))
	})
	return file_outputs_lidar_proto_rawDescData
}

var file_outputs_lidar_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_outputs_lidar_proto_goTypes = []any{
	(*LidarSensorOutput)(nil),      // 0: protobuf_msgs.LidarSensorOutput
	(*LidarSensorOutput_Scan)(nil), // 1: protobuf_msgs.LidarSensorOutput.Scan
}
var file_outputs_lidar_proto_depIdxs = []int32{
	1, // 0: protobuf_msgs.LidarSensorOutput.scans:type_name -> protobuf_msgs.LidarSensorOutput.Scan
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_outputs_lidar_proto_init() }
func file_outputs_lidar_proto_init() {
	if File_outputs_lidar_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_outputs_lidar_proto_rawDesc), len(file_outputs_lidar_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_outputs_lidar_proto_goTypes,
		DependencyIndexes: file_outputs_lidar_proto_depIdxs,
		MessageInfos:      file_outputs_lidar_proto_msgTypes,
	}.Build()
	File_outputs_lidar_proto = out.File
	file_outputs_lidar_proto_goTypes = nil
	file_outputs_lidar_proto_depIdxs = nil
}
